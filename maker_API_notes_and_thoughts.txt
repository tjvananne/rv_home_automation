
# testing maker API
# I only have this set up for local LAN access, no remote/cloud

# Event History Template
http://192.168.8.107/apps/api/6/devices/[Device ID]/events?access_token=0d38a5e8-f4d8-4bed-a792-619615659af9

# Event History for aqara temp / humidity sensor
http://192.168.8.107/apps/api/6/devices/1/events?access_token=0d38a5e8-f4d8-4bed-a792-619615659af9

# NICE, that works!

So now I've got this working to where I'll be able to poll (GET) my hubitat for changes from the aqara temperature sensor. That's great and all, but it would be way more slick to instead set up some logic to POST from my hubitat TO my raspberry pi device whenever something changes. Ideally, it would only be whenever the TEMP changes. So I'm thinking I need "Apps Code" for this. 

But, before I go about writing code for this. In the maker API, there is a section that says "URL to send device events to by POST" - so that sounds super interesting...

I'm thinking I could:

1) set up raspberry pi with static IP address
2) set up a simple http server listening on that IP address / port combination
3) pass that data to my cloud (linode?) server
4) maybe that cloud linode server is running some websocket logic where I can update the charts/graphs in real time? Like have a tile for current temp, but then show the history somewhere as well? Just a rolling history of like the past 10-20 readings?

# Other hubitat maker api questions...
Can I control which devices send data by POST?

Maybe I could set up my own pub/sub type of deal where I route the data to different places based on it's "label" / "name" combination (the name I gave the sensor?):
* label = name I gave to the sensor
* name = ["humidity"|"temperature"]


I don't think it's feasible or worth-while to run kafka on my pi. But maybe there's like a super slim version of Kafka or something I could run instead? I think I could easily do what I need in Python, but I'd rather it be in something ultra efficient.
Rust? Go?



